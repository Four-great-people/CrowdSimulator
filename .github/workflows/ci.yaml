name: ci

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: make environment
        run: |
          sudo apt update
          sudo apt install -y wget cmake g++
          sudo apt install -y libasio-dev zlib1g-dev libssl-dev libgtest-dev libgmock-dev
          wget https://github.com/CrowCpp/Crow/releases/download/v1.2.1.2/Crow-1.2.1-Linux.deb
          sudo dpkg -i Crow-1.2.1-Linux.deb
      
      - name: set cmake
        run: |
          cd backend
          mkdir build
          cd build
          cmake ..
      
      - name: build
        run: |
          cd backend/build
          make backend
      
      - name: test
        run: |
          cd backend/build
          make backend_test
          ./backend_test
      
      - name: asan test
        run: |
          cd backend/build
          make backend_test_sans
          ./backend_test_sans
      
      - name: tsan test
        run: |
          cd backend/build
          make backend_test_tsan
          ./backend_test_tsan

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: make environment
        run: |
          sudo apt update
          sudo apt install npm nodejs curl
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          \. "$HOME/.nvm/nvm.sh"
          nvm install 22
          cd frontend
          npm install

      - name: build
        run: |
          cd frontend
          npm run build
  
  test-middle-end:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: make environment
        run: |
          sudo apt update
          sudo apt install python3-pip
          python3 -m pip config set global.break-system-packages true
          cd middle-services
          pip3 install -r requirements.txt
          pip3 install -r crowd_db/requirements.txt

      - name: mock-tests
        run: |
          cd middle-services
          pytest -q tests_api

  test-crowddb-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          python3 -m pip config set global.break-system-packages true

      - name: Install deps
        working-directory: middle-services
        run: |
          pip3 install -r requirements.txt
          pip3 install -r crowd_db/requirements.txt
          pip3 install mongomock

      - name: Run unit tests (mongomock)
        working-directory: middle-services/crowd_db
        run: |
          pytest -q tests

  test-crowddb-integration:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.4.6
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongo --username user --password password --authenticationDatabase admin --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          cd middle-services
          pip install -r requirements.txt
          pip install -r crowd_db/requirements.txt

      - name: Apply collection validator (optional)
        run: |
          cd middle-services
          python3 -m crowd_db.scripts.setup_db || true

      - name: Run integration tests
        run: |
          cd middle-services
          pytest -q crowd_db/tests --integration
        env:
          MONGODB_URI: mongodb://mongo:27017
          MONGODB_DB: crowdsim
          MONGODB_COLLECTION_MAPS: maps 

